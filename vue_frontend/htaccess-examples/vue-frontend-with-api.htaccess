# Example 3: Serve Vue.js frontend with API proxying
# Use this when you have both Vue frontend and Laravel backend

RewriteEngine On

# API requests go to Laravel backend
RewriteRule ^api/(.*)$ http://localhost:8000/api/$1 [P,L]
# OR if backend is in subdirectory:
# RewriteRule ^api/(.*)$ laravel-backend/public/api/$1 [L,QSA]

# All other requests serve Vue.js SPA
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^.*$ /index.html [L,QSA]

# Handle preflight OPTIONS for API
RewriteCond %{REQUEST_METHOD} OPTIONS
RewriteRule ^api/(.*)$ laravel-backend/public/api/$1 [L,R=200]

# Add CORS headers for API
<LocationMatch "^/api/">
    Header always set Access-Control-Allow-Origin "*"
    Header always set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS"
    Header always set Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-CSRF-TOKEN,Accept"
</LocationMatch>

# Cache Vue.js assets
<IfModule mod_expires.c>
    ExpiresActive On
    ExpiresByType text/html "access plus 0 seconds"
    ExpiresByType text/css "access plus 1 month"
    ExpiresByType application/javascript "access plus 1 month"
    ExpiresByType image/png "access plus 1 month"
    ExpiresByType image/jpg "access plus 1 month"
    ExpiresByType image/jpeg "access plus 1 month"
    ExpiresByType image/gif "access plus 1 month"
    ExpiresByType image/svg+xml "access plus 1 month"
</IfModule>

